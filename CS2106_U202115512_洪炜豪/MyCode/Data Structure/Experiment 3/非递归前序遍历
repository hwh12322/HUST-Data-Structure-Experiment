#include <stack>
#include <iostream>
using namespace std;
status PreOrderTraverse(BiTree T,void (*visit)(BiTree))
{
    // 请在这里补充代码，完成本关任务
    /********** Begin *********/
	if(T == NULL){
			return 0;
		}
	BiTree p=T;
	stack <BiTree> s;	
    while (p || !s.empty())				//设置循环并以p和栈都为空时为结束循环标志;
	{
		if (p) {						//如果p不是空;
			visit(p);
			s.push(p);					//把p结点入栈，为的是保存p结点的右子树的位置;
			p = p->lchild;				//访问p结点的左子树;
		}
		else {
			p = s.top()->rchild;		//如果p为空,说明上个结点的左子树是空的，此时需要访问上个节点的右子树;
			s.pop();					//弹出栈顶元素，即上个节点;
		}
	}
	
    /********** End **********/
}